name: DRONE REMOTE

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.github/workflows/**'
  create:
    tags:
      - 'v*'

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            submodules: 'recursive'

        - name: Set up Python 3.8
          uses: actions/setup-python@v3
          with:
            python-version: '3.8'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pytest-timeout
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Run tests
          run: |
            cd backend
            PYTHONPATH=$(pwd) pytest tests.py --timeout=3
  lint:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'  # Specify the Python version you need

        - name: Install dependencies
          run: |
            pip install pylint

        - name: Run code linting
          run: |
            cd kivi_app
            pylint --disable=E0401 main.py || true
            cd ../backend
            pylint --disable=E0401 drone.py || true
            pylint --disable=E0401 server.py || true
                      
  android-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
        - name: Checkout code
          uses: actions/checkout@v3
  
        - name: Create zip archive
          run: |
            zip -r release.zip .
        
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
        
        - name: Upload release.zip as release asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./release.zip
            asset_name: release.zip
            asset_content_type: application/zip